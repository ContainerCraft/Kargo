# This GitHub Workflow will run on every push to the repository
# and will test the Kargo codebase on a Kind Kubernetes cluster.
name: CI Testing - Konductor on Kind

on: push

jobs:
  ci-kargo-kind:
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/containercraft/konductor:latest
      options: --user runner --security-opt seccomp=unconfined

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        id: checkout
        with:
          fetch-depth: 1

      - name: Pulumi Login
        id: pulumi-login
        run: make login
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Kind Cluster
        id: create-kind-kubernetes
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ACTIONS_STEP_DEBUG: true
          KUBECONFIG: .kube/config
          KINDCONFIG: ./hack/kind.yaml
        run: |
          set -ex;
          direnv allow
          make kind-cluster
          sudo kind create cluster -v7 --wait 1m --retain --config=$KINDCONFIG
          sudo kind get kubeconfig --name cilium | tee $KUBECONFIG
          sudo chown -R $(id -u):$(id -g) $KUBECONFIG

#     - id: wait-kind-ready
#       name: Wait for Kind Kubernetes API to be Ready
#       env:
#         PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         ACTIONS_STEP_DEBUG: true
#       run: make kind-ready

      - name: Deploy Pulumi Infrastructure
        id: deploy
        run: make pulumi-up
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#     - name: Wait for All Pods to be Ready
#       id: wait-all-pods
#       run: make wait-all-pods
#       env:
#         PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Destroy Pulumi Infrastructure
        id: destroy
        run: make pulumi-down
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean Up Resources
        id: clean
        run: make clean
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Perform Extended Cleanup
        id: clean-all
        if: always()
        run: make clean-all
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
